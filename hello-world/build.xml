<project xmlns:ivy="antlib:org.apache.ivy.ant" name="hello-world" basedir="." default="jar">
	<property name="build.dir"         value="target"/>
	<property name="build.lib.dir"     value="${build.dir}/lib"/>
	<property name="classes.dir"       value="${build.dir}/classes"/>
	<property name="classes.test.dir"  value="${build.dir}/test-classes"/>
	<property name="lib.dir"           value="lib"/>
	<property name="reports.dir"       value="reports"/>
	<property name="src.dir"           value="src/main/java"/>
	<property name="src.test.dir"      value="src/test/java"/>
	<property name="version"           value="1.0-SNAPSHOT" />
	<property name="jar.file"          value="${build.dir}/${ant.project.name}-all-${version}.jar" />

	<target name="clean">
	  <delete dir="${build.dir}"/>
	  <delete dir="${lib.dir}"/>
	  <delete dir="${reports.dir}"/>
	</target>
	
    <target name="resolve">
	  <!--
	  TODO:
	  Perform an Ivy retrieve using a pathid of 'compile.classpath' and a pattern of
	  '${ivy.lib.dir}/[conf]/[artifact].[ext]'.
	  
	  Create two cachefilesets: one for the 'compile' configuration and another for 
	  the 'test' configuration. The ID of the first cachefileset should be 'compile.classpath'
	  and the ID of the second should be 'test.classpath'.
	  -->
    </target>
	
	<!--
	TODO: Make this target depend on the 'clean' and 'resolve' targets.
	-->
	<target name="compile">
	  <mkdir dir="${classes.dir}"/>
	  <javac srcdir="${src.dir}" destdir="${classes.dir}">
	    <!--
		TODO: Define the classpath to be a combination of the 'compile.classpath' fileset
		created by the "resolve" target above and a pathelement of the 'classes.dir' property.
		-->
	  </javac>
	</target>

	<!--
	TODO: Make this target depend on the 'compile' target.
	-->
	<target name="test-compile">
	  <mkdir dir="${classes.test.dir}"/>
	  <javac srcdir="${src.test.dir}" destdir="${classes.test.dir}">
	    <!--
		TODO: Define the classpath to be a combination of the 'test.classpath' fileset
		created by the "resolve" target above, a pathelement of the 'classes.dir' property,
		and a second pathelement of the 'classes.test.dir' property.
		-->
	  </javac>
	</target>

	<target name="test" depends="test-compile">
	  <mkdir dir="${reports.dir}"/>
          <junit printsummary="yes" haltonfailure="yes">
	    <!--
            TODO: Define the classpath to be a combination of the 'test.classpath' fileset
            created by the "resolve" target above, a pathelement of the 'classes.dir' property,
            and a second pathelement of the 'classes.test.dir' property.
            -->
            <formatter type="plain" />        
            <batchtest fork="yes" todir="${reports.dir}">
              <fileset dir="${src.test.dir}">
                <include name="**/*Test.java"/>
              </fileset>
            </batchtest>
          </junit>
	</target>

	<!--
	TODO: Make this target depend on the 'test' target.
	-->
	<target name="jar">
          <ivy:cachefileset setid="hello.runclasspath" conf="compile" />
          <jar destfile="${jar.file}" basedir="${classes.dir}">
            <manifest>
              <attribute name="Main-Class" value="hello.HelloWorld"/>
            </manifest>
            <zipgroupfileset refid="hello.runclasspath"/>
	  </jar>
	</target>
</project>
